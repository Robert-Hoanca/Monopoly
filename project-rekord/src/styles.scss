
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$monopoly-primary: mat.define-palette(mat.$indigo-palette);
$monopoly-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$monopoly-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$monopoly-theme: mat.define-light-theme((
  color: (
    primary: $monopoly-primary,
    accent: $monopoly-accent,
    warn: $monopoly-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($monopoly-theme);

/* You can add global styles to this file, and also import other style files */
body{
    margin: 0;
    padding: 0;
    width: 100vw;
    height: 100vh;
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


//Dialogs

.exchangePanel{
  max-width: 60%;
  max-height: 80%;
}
.propertyInfo{
    width: 100%;
    pointer-events: none!important;
    .mat-dialog-container{
        transform: none;
        background: none;
        box-shadow: none;
        display: flex;
        justify-content: end;
        align-items: center;
        app-card-dialog{
          pointer-events: all;
        }
    }
}


.showDiceResult{
  .mat-dialog-container{
    background: transparent;
    box-shadow: none;
    padding: 0;
    display: flex;
    height: 150px;
    width: 300px;
    align-items: center;
    justify-content: center;
  }
  .dice{
    width: 100px;
    height: 100px;
    background: #fff;
    margin-left: 20px;
    border-radius: 5px;
    .dotsContainer{
      width: 100px;
      height: 100px;
      display: flex;
      align-items: center;
      justify-content: space-around;
      .dot{
        width: 15px;
        height: 15px;
        background: #000;
        border-radius: 50%;
      }
    }

    &.three{
      .dotsContainer{
        transform: rotate(45deg);
      }
    }

    &.four{
      .dotsContainer{
        flex-direction: column;
        .innerDotsContainer{
          width: 100%;
          height: 50%;
          display: flex;
          align-items: center;
          justify-content: space-evenly;
        }
      }
    }
    &.five{
      .dotsContainer{
        flex-direction: column;
        .innerDotsContainer{
          width: 100%;
          height: 33.33%;
          display: flex;
          align-items: center;
          justify-content: space-around;
        }
      }
    }
    &.six{
      .dotsContainer{
        flex-direction: row;
        .innerDotsContainer{
          width: 50%;
          height: 100%;
          display: flex;
          align-items: center;
          justify-content: space-evenly;
          flex-direction: column;
        }
      }
    }
  }
}